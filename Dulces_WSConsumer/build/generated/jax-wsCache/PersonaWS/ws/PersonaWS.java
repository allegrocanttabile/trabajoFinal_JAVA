
package ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PersonaWS", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PersonaWS {


    /**
     * 
     * @param pass
     * @param dni
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loginSPersona", targetNamespace = "http://ws/", className = "ws.LoginSPersona")
    @ResponseWrapper(localName = "loginSPersonaResponse", targetNamespace = "http://ws/", className = "ws.LoginSPersonaResponse")
    @Action(input = "http://ws/PersonaWS/loginSPersonaRequest", output = "http://ws/PersonaWS/loginSPersonaResponse")
    public boolean loginSPersona(
        @WebParam(name = "dni", targetNamespace = "")
        String dni,
        @WebParam(name = "pass", targetNamespace = "")
        String pass);

    /**
     * 
     * @param dni
     * @return
     *     returns ws.PersonaBean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSPersona", targetNamespace = "http://ws/", className = "ws.FindSPersona")
    @ResponseWrapper(localName = "findSPersonaResponse", targetNamespace = "http://ws/", className = "ws.FindSPersonaResponse")
    @Action(input = "http://ws/PersonaWS/findSPersonaRequest", output = "http://ws/PersonaWS/findSPersonaResponse")
    public PersonaBean findSPersona(
        @WebParam(name = "dni", targetNamespace = "")
        String dni);

    /**
     * 
     * @param apellidos
     * @param fechaIngreso
     * @param password
     * @param cargoId
     * @param fechaNacimiento
     * @param direccion
     * @param celular
     * @param sexo
     * @param dni
     * @param transporteId
     * @param nombres
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSPersona", targetNamespace = "http://ws/", className = "ws.CreateSPersona")
    @ResponseWrapper(localName = "createSPersonaResponse", targetNamespace = "http://ws/", className = "ws.CreateSPersonaResponse")
    @Action(input = "http://ws/PersonaWS/createSPersonaRequest", output = "http://ws/PersonaWS/createSPersonaResponse")
    public boolean createSPersona(
        @WebParam(name = "nombres", targetNamespace = "")
        String nombres,
        @WebParam(name = "apellidos", targetNamespace = "")
        String apellidos,
        @WebParam(name = "dni", targetNamespace = "")
        String dni,
        @WebParam(name = "fechaNacimiento", targetNamespace = "")
        String fechaNacimiento,
        @WebParam(name = "sexo", targetNamespace = "")
        String sexo,
        @WebParam(name = "direccion", targetNamespace = "")
        String direccion,
        @WebParam(name = "celular", targetNamespace = "")
        String celular,
        @WebParam(name = "fechaIngreso", targetNamespace = "")
        String fechaIngreso,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "cargoId", targetNamespace = "")
        String cargoId,
        @WebParam(name = "transporteId", targetNamespace = "")
        String transporteId);

    /**
     * 
     * @param dni
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteSPersona", targetNamespace = "http://ws/", className = "ws.DeleteSPersona")
    @ResponseWrapper(localName = "deleteSPersonaResponse", targetNamespace = "http://ws/", className = "ws.DeleteSPersonaResponse")
    @Action(input = "http://ws/PersonaWS/deleteSPersonaRequest", output = "http://ws/PersonaWS/deleteSPersonaResponse")
    public Boolean deleteSPersona(
        @WebParam(name = "dni", targetNamespace = "")
        String dni);

    /**
     * 
     * @return
     *     returns java.util.List<ws.PersonaBean>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readSPersona", targetNamespace = "http://ws/", className = "ws.ReadSPersona")
    @ResponseWrapper(localName = "readSPersonaResponse", targetNamespace = "http://ws/", className = "ws.ReadSPersonaResponse")
    @Action(input = "http://ws/PersonaWS/readSPersonaRequest", output = "http://ws/PersonaWS/readSPersonaResponse")
    public List<PersonaBean> readSPersona();

    /**
     * 
     * @param apellidos
     * @param fechaIngreso
     * @param password
     * @param cargoId
     * @param fechaNacimiento
     * @param direccion
     * @param celular
     * @param sexo
     * @param dni
     * @param transporteId
     * @param nombres
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateSPersona", targetNamespace = "http://ws/", className = "ws.UpdateSPersona")
    @ResponseWrapper(localName = "updateSPersonaResponse", targetNamespace = "http://ws/", className = "ws.UpdateSPersonaResponse")
    @Action(input = "http://ws/PersonaWS/updateSPersonaRequest", output = "http://ws/PersonaWS/updateSPersonaResponse")
    public boolean updateSPersona(
        @WebParam(name = "nombres", targetNamespace = "")
        String nombres,
        @WebParam(name = "apellidos", targetNamespace = "")
        String apellidos,
        @WebParam(name = "dni", targetNamespace = "")
        String dni,
        @WebParam(name = "fechaNacimiento", targetNamespace = "")
        String fechaNacimiento,
        @WebParam(name = "sexo", targetNamespace = "")
        String sexo,
        @WebParam(name = "direccion", targetNamespace = "")
        String direccion,
        @WebParam(name = "celular", targetNamespace = "")
        String celular,
        @WebParam(name = "fechaIngreso", targetNamespace = "")
        String fechaIngreso,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "cargoId", targetNamespace = "")
        String cargoId,
        @WebParam(name = "transporteId", targetNamespace = "")
        String transporteId);

}
